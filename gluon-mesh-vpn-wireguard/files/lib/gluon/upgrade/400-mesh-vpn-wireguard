#!/bin/sh

rm /etc/config/wireguard
touch /etc/config/wireguard

uci set wireguard.mesh_vpn=mesh_vpn

domain=$(uci get gluon.core.domain)
if [ -z "$domain" ]; then {
        siteJson="/lib/gluon/site.json";
} else {
        siteJson="/lib/gluon/domains/$domain.json";
}
fi

uci set wireguard.mesh_vpn.enabled=$(jsonfilter -i $siteJson -e "$.mesh_vpn.wireguard.enabled")
uci set wireguard.mesh_vpn.iface=$(jsonfilter -i $siteJson  -e "$.mesh_vpn.wireguard.iface")
uci set wireguard.mesh_vpn.iprange=$(jsonfilter -i $siteJson  -e "$.mesh_vpn.wireguard.iprange")
uci set wireguard.mesh_vpn.limit=$(jsonfilter -i $siteJson -e "$.mesh_vpn.wireguard.limit")
uci set wireguard.mesh_vpn.gretapip=$(jsonfilter -i $siteJson  -e "$.mesh_vpn.wireguard.gretapip")
                                                                                                                                                             
count=$(jsonfilter -i $siteJson  -e "$.mesh_vpn.wireguard.peers.*" | wc -l)
count=`expr $count - 1`
                                                                                                
i=0                                                                      
while [ $i -le $count ]
do                                                                       
        uci set wireguard.peer_$(expr $i + 1)=peer
        uci set wireguard.peer_$(expr $i + 1).endpoint=$(jsonfilter -i $siteJson  -e "$.mesh_vpn.wireguard.peers[$i].endpoint")
        uci set wireguard.peer_$(expr $i + 1).publickey=$(jsonfilter -i $siteJson  -e "$.mesh_vpn.wireguard.peers[$i].publickey")
        i=`expr $i + 1`                                                                                                       
done                                                                                                                          
                                                                                                                              
uci commit wireguard          
