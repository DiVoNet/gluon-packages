#!/bin/sh

# generate private key if not exists
temp=$(uci get wireguard.mesh_vpn.privatekey)
if [ "$?" -ne "0" ]; then
        uci set wireguard.mesh_vpn.privatekey=$(wg genkey)
        uci commit wireguard
fi

if [ "$(uci get wireguard.mesh_vpn.enabled)" == "1" ]; then

        # todo refactor to default CONNECTED=0
        CONNECTED=1
        INTERFACE=$(uci get wireguard.mesh_vpn.iface)

        # Wireguardinterface vorhanden???
        ip addr show dev $INTERFACE >/dev/null
        if [ $? != 0 ]; then
                CONNECTED=0
        fi

        # Gretapinterface vorhanden??
        if [ $CONNECTED != 0 ]; then
                ip addr show dev gre >/dev/null
                if [ $? != 0 ]; then
                        CONNECTED=0
                fi
        fi

        # Funktioniert das Gretapinterface ueberhaupt? Also gehen Daten rueber?
        if [ $CONNECTED != 0 ]; then
                RXBYTES=$(ip -statistics link show dev gre | sed '4q;d' | awk '{print $1}')
                if [ $RXBYTES == 0 ]; then
                		CONNECTED=0
                fi
        fi

        # Und funktioniert das Wireguardinterface? Kann ich den Server erreichen?
        if [ $CONNECTED != 0 ]; then
                ping -c1 -w2 $(uci get wireguard.mesh_vpn.gretapip) &> /dev/null
                if [ $? != 0 ]; then
              			CONNECTED=0
                else
                		echo "OK, connected to DiVoNet."
                    exit 0;
                fi
        fi

        # connect / reconnect if tests failed
        if [ $CONNECTED == 0 ]; then

                # Falls ein Fehler bei Wireguard war, Module entladen und neuladen
                rmmod wireguard
                sleep 2
                modprobe wireguard

                #todo sn broker
                #todo bond with 2 sn connections

                # get random wireguard endpoint url in range of configured wireguard peers, try 10 times max
                HTTP_CODE=0
                COUNTER=0
                until [ $HTTP_CODE -eq 200 ] || [ $COUNTER -eq 10 ]
                do
                        WG_PEER_NUMBER=$(awk -v min=1 -v max=$(uci show wireguard | grep -c endpoint) 'BEGIN{srand(); print int(min+rand()*(max-min+1))}')
                        URL=$(uci get wireguard.peer_$WG_PEER_NUMBER.endpoint | cut -d':' -f1)
                        HTTP_CODE=$(gluon-wan curl -s -k -w ''%{http_code}'' https://$URL/wireguard.php)
                        COUNTER=`expr $COUNTER + 1`
                        sleep 5
                done

                if [ $HTTP_CODE -ne 200 ]; then
                        echo "Error, can't connect to some supernode."
                        exit 1;
                fi
                
                grep -vwE "(freifunk-koenigswinter.de|divonet.de)" /etc/hosts > /tmp/hosts.sik
                mv /tmp/hosts.sik /etc/hosts

                SN_IP=$(gluon-wan nslookup $URL | awk -F': ' 'NR==5 {print $2} ')
                ENTRY="$SN_IP $URL"
                echo $ENTRY >> /etc/hosts

                # delete old peers
                wg set $INTERFACE peer $(wg | awk 'BEGIN {RS=""} /endpoint/ {print $2}') remove &> /dev/null
                batctl if del gre &> /dev/null
                ip link delete dev gre &> /dev/null
                ip link delete dev $INTERFACE &> /dev/null

                PUBLICKEY=$(uci get wireguard.mesh_vpn.privatekey | wg pubkey)
                echo $(uci get wireguard.mesh_vpn.privatekey) > /root/wgpriv

                # push wg public key to sn
                IP=$(gluon-wan curl -s -k --data-urlencode "pubkey=$PUBLICKEY" https://$URL/wireguard.php)
                if expr "$IP" : '[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*\.[0-9][0-9]*$' > /dev/null; then
                        for i in 1 2 3 4; do
                                if [ $(echo "$IP" | cut -d. -f$i) -gt 255 ]; then
                                        echo "Error, ""$IP"" is not a valid ip."
                                        exit 1
                                fi
                        done
                        # do nothing here, ip is ok
                else
                        echo "Error, ""$IP"" is not a valid ip."
                        exit 1
                fi

                ip link add dev $INTERFACE type wireguard
                ip address add dev $INTERFACE $IP/16
                wg set $INTERFACE private-key /root/wgpriv

                sleep 6

                wg set $INTERFACE peer $(uci get wireguard.peer_$WG_PEER_NUMBER.publickey) persistent-keepalive 26 allowed-ips $(uci get wireguard.mesh_vpn.gretapip)/32 endpoint $(uci get wireguard.peer_$WG_PEER_NUMBER.endpoint)
                ip link set up dev $INTERFACE

                sleep 6

                ip link add gre type gretap local $IP remote $(uci get wireguard.mesh_vpn.gretapip)
                ip link set up dev gre

                sleep 6

                batctl if add gre
                iptables -A INPUT -i $INTERFACE -j ACCEPT
                iptables -A FORWARD -i $INTERFACE -j ACCEPT
        fi
fi
